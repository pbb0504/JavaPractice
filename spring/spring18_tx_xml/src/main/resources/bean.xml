<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="accountDao" class="cn.pbb.dao.impl.AccountDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean id="accountService" class="cn.pbb.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql:///db1"/>
        <property name="username" value="root"/>
        <property name="password" value="mysql0504"/>
    </bean>


    <!-- spring中居于xml的声明式事务控制配置步骤
     1. 配置事务管理器
     2. 配置事务通知
        此时我们需要导入事务的约束 tx
        使用tx:advice配置事务通知 id:给事务通知起标识 transaction-manager:给事务通知提供一个事务管理器引用
     3. 配置aop中的通用切入点表达式
     4. 建立事务通知和切入点表达式的对应关系
     5. 配置事务的属性
        事务的通知tx:advice中配
        属性：
            isolation  指定事务的隔离级别 默认：default（使用数据库的默认隔离级别）
            propagation  指定事务的传播行为 默认：required（一定会有事务，增删改的选择，查询方法可以选择supports
            read-only  指定事务是否只读 只有查询方法才能设置为只读 默认：false
            timeout  指定事务的超时时间 默认：-1 永不超时 以秒为单位
            no-rollback-for  指定一个异常，当产生该异常时，事务不回滚，当产生其它异常时，事务回滚，没有默认值，表示任何异常都回滚
            rollback-for  指定一个异常，当产生该异常时，事务回滚，当产生其它异常时，事务不回滚，没有默认值，表示任何异常都回滚

     -->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="interceptor" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="pt" expression="execution(* cn.pbb.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="interceptor" pointcut-ref="pt"/>
    </aop:config>
</beans>