<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置spring的ioc，把service对象配置进来 -->
    <bean id="accountService" class="cn.pbb.service.impl.AccountServiceImpl"/>

    <!-- 配置logger类
     -->
    <bean id="logger" class="cn.pbb.utils.Logger"/>

    <!-- 配置aop -->
    <aop:config>
        <aop:pointcut id="pt2" expression="execution(* cn.pbb.service.impl.*.*(..))"/>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置通知的类型且建立通知方法和切入点方法的关联-->
            <!--在执行pointcut之前执行printLog-->
            <!-- 前置通知 -->
<!--            <aop:before method="beforePrintLog" pointcut-ref="pt1"/>-->
            <!-- 后置通知 -->
<!--            <aop:after method="afterPrintLog" pointcut-ref="pt1"/>-->
            <!-- 异常通知 -->
<!--            <aop:after-throwing method="exceptionPrintLog" pointcut-ref="pt1"/>-->
            <!-- 返回通知 -->
<!--            <aop:after-returning method="returnPrintLog" pointcut-ref="pt1"/>-->

            <!-- 配置切入点表达式 id:用于指定表达式的唯一标识 此标签写在aop:aspect内部，只能当前切面使用
              还可以写在外面，此时变成了所有切面可用
            -->
            <aop:pointcut id="pt1" expression="execution(* cn.pbb.service.impl.*.*(..))"/>

            <!-- 环绕通知 -->
            <aop:around method="aroundPrintLog" pointcut-ref="pt1"/>
        </aop:aspect>
    </aop:config>

</beans>